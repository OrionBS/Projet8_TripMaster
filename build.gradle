buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: 3.0
    compile('org.springframework.boot:spring-boot-starter-web:2.6.1')
    compile('org.springframework.boot:spring-boot-starter-actuator:2.6.1')
    compile('org.jetbrains.kotlin:kotlin-stdlib:1.6.0')
    compile group: 'org.javamoney', name: 'moneta', version: '1.3'
	compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    compile group: 'io.github.openfeign', name: 'feign-okhttp', version: '10.11'
    compile group: 'io.github.openfeign', name: 'feign-gson', version: '10.11'
    compile group: 'io.github.openfeign', name: 'feign-slf4j', version: '10.11'

    testCompile('junit:junit:4.13.2')
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.6.1'
    testImplementation(group: 'junit', name: 'junit', version: '4.13.2')
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '2.24.0')
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.1'

}

test {
    useJUnitPlatform();
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.1
      }
    }
  }
}
